Meeting 5
22/11/2013

- we all went through each file and corrected and commented the code
- added a few other methods such as makeReservation in the model class
- integrated the files, created a main file and built the project
- solved a few issues 

- made a list of possible refinements of the code, as follows:
(some of them were made through the meeting)


1. Add the SeatStatus (Booked, Waiting) in the makeFlightInq method in the Controller to make the flight inquiry easier to call
and remove the makeFlightWaitingInq method from the class
2. Add a makeReservation method in the model and make the controller access that as opposed to accessing the flight and passenger classes directly
3. Look up const correctness and think of which methods might benefit from it => const return_type function_name(const param_type _param) const
4. Look up abstract classes (where at least one method is pure)
5. Make checkup methods for the input data file, for example, check for fractional seat number
6. Think about making the Controller and View as singletons -> or could we permit multiple views at the same time?
7. Controller checks, models adds and removes data and view displays -> Look up chain of responsibility engineering method.
8. Create isWaiting methods for the flight and passenger to return if a passenger is waiting and which flights he is waiting on
9. Check if the passenger is attempting to book more than one flight on the same day (Controller's responsibility)
10. When making a reservation, if a passenger doesn't exist in the database, he should be created (Model's responsibility)
11. Finish the CLIView and GUIView classes :D

Next meeting:
Monday, the 25th of November, 10:10 am

Observations:
Milestone of week 8 was almost met (90%)
Milestones of week 9: 
- build the project without bugs
- test the project
 


